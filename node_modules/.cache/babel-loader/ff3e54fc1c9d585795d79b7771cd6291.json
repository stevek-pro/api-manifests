{"ast":null,"code":"var _jsxFileName = \"/home/saul/dev/chino-api-react/src/components/Planets.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n\nconst fetchPlanets = async () => {\n  const res = await fetch('http://swapi.dev/api/planets/');\n  return res.json();\n};\n\nconst Planets = () => {\n  _s();\n\n  const {\n    data,\n    status\n  } = useQuery('planets', fetchPlanets);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Planets, \"r91jLNwsqTqZNm64JWU7RjPAH/8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Planets;\nexport default Planets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"sources":["/home/saul/dev/chino-api-react/src/components/Planets.js"],"names":["React","QueryClient","QueryClientProvider","useQuery","queryClient","fetchPlanets","res","fetch","json","Planets","data","status","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,QAA3C,QAA2D,aAA3D;;AAEA,MAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;;AAEA,MAAMI,YAAY,GAAG,YAAY;AAC/B,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAAvB;AACA,SAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,CAHD;;AAKA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAO;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBR,QAAQ,CAAC,SAAD,EAAYE,YAAZ,CAAlC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CATD;;GAAMD,O;UACsBN,Q;;;KADtBM,O;AAWN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query';\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nconst fetchPlanets = async () => {\r\n  const res = await fetch('http://swapi.dev/api/planets/');\r\n  return res.json();\r\n}\r\n\r\nconst Planets = () => {\r\n  const  { data, status } = useQuery('planets', fetchPlanets);\r\n  console.log(data);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Planets</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Planets;"]},"metadata":{},"sourceType":"module"}