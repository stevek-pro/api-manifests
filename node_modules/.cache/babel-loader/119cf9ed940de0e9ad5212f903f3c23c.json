{"ast":null,"code":"var _jsxFileName = \"/home/saul/dev/chino-api-react/src/components/People.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport Person from './Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchPeople = async () => {\n  const res = await fetch('http://swapi.dev/api/people/');\n  return res.json();\n};\n\nconst People = () => {\n  _s();\n\n  const {\n    data,\n    status\n  } = useQuery('planets', fetchPeople);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), status === 'loading' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), status === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.results.map(person => /*#__PURE__*/_jsxDEV(Person, {\n        person: person\n      }, person.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(People, \"r91jLNwsqTqZNm64JWU7RjPAH/8=\", false, function () {\n  return [useQuery];\n});\n\n_c = People;\nexport default function Wrapped() {\n  return /*#__PURE__*/_jsxDEV(People, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n_c2 = Wrapped;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"People\");\n$RefreshReg$(_c2, \"Wrapped\");","map":{"version":3,"sources":["/home/saul/dev/chino-api-react/src/components/People.js"],"names":["React","useQuery","Person","fetchPeople","res","fetch","json","People","data","status","console","log","results","map","person","name","Wrapped"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,WAAW,GAAG,YAAY;AAC9B,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAvB;AACA,SAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAO;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBR,QAAQ,CAAC,SAAD,EAAYE,WAAZ,CAAlC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGC,MAAM,KAAK,OAAX,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAQGA,MAAM,KAAK,SAAX,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAYGA,MAAM,KAAK,SAAX,iBACC;AAAA,gBACID,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAiBC,MAAM,iBAAI,QAAC,MAAD;AAA0B,QAAA,MAAM,EAAEA;AAAlC,SAAaA,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA,cAA3B;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAzBD;;GAAMR,M;UACsBN,Q;;;KADtBM,M;AA2BN,eAAe,SAASS,OAAT,GAAkB;AAC/B,sBACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAEE;MAHoBA,O","sourcesContent":["import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport Person from './Person';\r\n\r\nconst fetchPeople = async () => {\r\n  const res = await fetch('http://swapi.dev/api/people/');\r\n  return res.json();\r\n}\r\n\r\nconst People = () => {\r\n  const  { data, status } = useQuery('planets', fetchPeople);\r\n  console.log(data);\r\n\r\n  return (\r\n    <div>\r\n      <h2>People</h2>\r\n      {/*<p> { status } </p>*/}\r\n\r\n      {status === 'error' && (\r\n        <div>Error fetching data</div>\r\n      )}\r\n\r\n      {status === 'loading' && (\r\n        <div>Loading data</div>\r\n      )}\r\n\r\n      {status === 'success' && (\r\n        <div>\r\n          { data.results.map(person => <Person key={person.name} person={person} />) }\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Wrapped(){\r\n  return(\r\n      <People/>\r\n  )}"]},"metadata":{},"sourceType":"module"}